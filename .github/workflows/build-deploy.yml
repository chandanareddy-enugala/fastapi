name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
      
          

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Check environment variables
        run: |
          echo "Checking environment variables..."
          [ -z "$DATABASE_HOSTNAME" ] && echo "DATABASE_HOSTNAME is not set" || echo "DATABASE_HOSTNAME is set"
          [ -z "$DATABASE_PORT" ] && echo "DATABASE_PORT is not set" || echo "DATABASE_PORT is set"
          [ -z "$DATABASE_PASSWORD" ] && echo "DATABASE_PASSWORD is not set" || echo "DATABASE_PASSWORD is set"
          [ -z "$DATABASE_NAME" ] && echo "DATABASE_NAME is not set" || echo "DATABASE_NAME is set"
          [ -z "$DATABASE_USERNAME" ] && echo "DATABASE_USERNAME is not set" || echo "DATABASE_USERNAME is set"
          [ -z "$SECRET_KEY" ] && echo "SECRET_KEY is not set" || echo "SECRET_KEY is set"
          [ -z "$ALGORITHM" ] && echo "ALGORITHM is not set" || echo "ALGORITHM is set"
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest -vv
          
  